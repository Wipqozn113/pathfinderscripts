{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CombatTrackerComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CombatTrackerComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const particpant_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(particpant_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(particpant_r3.initiative);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(particpant_r3.ac);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(particpant_r3.currenthp);\n  }\n}\nfunction CombatTrackerComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Initiative\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"AC\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"HP\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, CombatTrackerComponent_table_5_tr_12_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.particpants);\n  }\n}\nexport class CombatTrackerComponent {\n  constructor(http, baseUrl) {\n    this.particpants = [];\n    http.get(baseUrl + 'combat').subscribe(result => {\n      this.particpants = result;\n    }, error => console.error(error));\n  }\n}\nCombatTrackerComponent.ɵfac = function CombatTrackerComponent_Factory(t) {\n  return new (t || CombatTrackerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCombatTrackerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CombatTrackerComponent,\n  selectors: [[\"app-combat-tracker\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CombatTrackerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Combat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, CombatTrackerComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, CombatTrackerComponent_table_5_Template, 13, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.particpants == null ? null : ctx.particpants.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.particpants.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAAgC;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAY/CA,0BAA2C;IACnCA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA0B;IAAAA,iBAAK;;;;IAH/BA,eAAqB;IAArBA,wCAAqB;IACrBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAA0B;IAA1BA,6CAA0B;;;;;IAdtCA,gCAA2F;IAGjFA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,mBAAE;IAAAA,iBAAK;IAGfA,8BAAO;IACLA,+EAKK;IACPA,iBAAQ;;;;IANqBA,gBAAc;IAAdA,4CAAc;;;ACT7C,OAAM,MAAOC,sBAAsB;EAGjCC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,gBAAW,GAAkB,EAAE;IAGpCD,IAAI,CAACE,GAAG,CAAgBD,OAAO,GAAG,QAAQ,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC7D,IAAI,CAACC,WAAW,GAAGD,MAAM;IAC3B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,sBAAsB;mBAAtBA,sBAAsB,4DAGK,UAAU;AAAA;AAHrCA,sBAAsB;QAAtBA,sBAAsB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPnCf,6BAAoB;MAAAA,sBAAM;MAAAA,iBAAK;MAE/BA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,mEAAuD;MAEvDA,4EAiBQ;;;MAnBJA,eAA0B;MAA1BA,iFAA0B;MAEmCA,eAAwB;MAAxBA,6CAAwB","names":["i0","CombatTrackerComponent","constructor","http","baseUrl","get","subscribe","result","particpants","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/bryancave/Documents/scripts/pathfinderscripts/tools/Pathfinder.CombatManager/Pathfinder.CombatManager/ClientApp/src/app/combat-tracker/combat-tracker.component.html","/Users/bryancave/Documents/scripts/pathfinderscripts/tools/Pathfinder.CombatManager/Pathfinder.CombatManager/ClientApp/src/app/combat-tracker/combat-tracker.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Combat</h1>\n\n<p>This component demonstrates fetching data from the server.</p>\n\n<p *ngIf=\"!particpants?.length\"><em>Loading...</em></p>\n\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"particpants.length\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Initiative</th>\n      <th>AC</th>\n      <th>HP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let particpant of particpants\">\n        <td>{{ particpant.name }}</td>\n        <td>{{ particpant.initiative }}</td>\n        <td>{{ particpant.ac }}</td>\n        <td>{{ particpant.currenthp }}</td>\n    </tr>\n  </tbody>\n</table>\n\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-combat-tracker',\n  templateUrl: './combat-tracker.component.html'\n})\nexport class CombatTrackerComponent {\n  public particpants: Participant[] = [];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<Participant[]>(baseUrl + 'combat').subscribe(result => {\n      this.particpants = result;\n    }, error => console.error(error));\n  }\n}\n\ninterface Participant {\n  name: string;\n  initiative: number;\n  ac: number;\n  currenthp: number;\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}